//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.4 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package net.solarnetwork.node.io.canbus.kcd;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * A datagram that is used to transport payload data along the bus
 *                 network.
 * 
 * <p>Java class for MessageType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="MessageType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="Notes" type="{http://kayak.2codeornot2code.org/1.0}NotesType" minOccurs="0"/>
 *         <element name="Producer" type="{http://kayak.2codeornot2code.org/1.0}ProducerType" minOccurs="0"/>
 *         <element name="Multiplex" type="{http://kayak.2codeornot2code.org/1.0}MultiplexType" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="Signal" type="{http://kayak.2codeornot2code.org/1.0}SignalType" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="id" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             <pattern value="0x[A-F0-9]+"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="length" default="auto">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *             <enumeration value="auto"/>
 *             <enumeration value="0"/>
 *             <enumeration value="1"/>
 *             <enumeration value="2"/>
 *             <enumeration value="3"/>
 *             <enumeration value="4"/>
 *             <enumeration value="5"/>
 *             <enumeration value="6"/>
 *             <enumeration value="7"/>
 *             <enumeration value="8"/>
 *             <enumeration value="12"/>
 *             <enumeration value="16"/>
 *             <enumeration value="20"/>
 *             <enumeration value="24"/>
 *             <enumeration value="32"/>
 *             <enumeration value="48"/>
 *             <enumeration value="64"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="interval" default="0">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *             <minInclusive value="0"/>
 *             <maxInclusive value="60000"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="triggered" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="count" default="0">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *             <minInclusive value="0"/>
 *             <maxInclusive value="1000000"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="format" default="standard">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *             <enumeration value="standard"/>
 *             <enumeration value="extended"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="fd" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="bitrateswitch" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="remote" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MessageType", propOrder = {
    "notes",
    "producer",
    "multiplex",
    "signal"
})
public class MessageType {

    @XmlElement(name = "Notes")
    protected String notes;
    @XmlElement(name = "Producer")
    protected ProducerType producer;
    @XmlElement(name = "Multiplex")
    protected List<MultiplexType> multiplex;
    @XmlElement(name = "Signal")
    protected List<SignalType> signal;
    /**
     * The unique identifier of the message. May have 11-bit (Standard
     *                     frame format) or 29-bit (Extended frame format). The identifier is usally
     *                     written in hexadecimal format e.g. 0x123. If format is "extended" this
     *                     identifier includes both Base ID (11 bits) and Extended ID (18
     *                     bits).
     * 
     */
    @XmlAttribute(name = "id", required = true)
    protected String id;
    /**
     * Human-readable name of the network message
     *                     (e.g."OBD-Info").
     * 
     */
    @XmlAttribute(name = "name", required = true)
    protected String name;
    /**
     * Number of bytes available in the data field of the message (data
     *                     length code). "auto" (default) calculate minimum length for the contained
     *                     signals in the message. Length greater than 8 is only allowed in messages with
     *                     flexible data rate (fd).
     * 
     */
    @XmlAttribute(name = "length")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String length;
    /**
     * Repetition interval of a cyclic network message in
     *                     milliseconds.
     * 
     */
    @XmlAttribute(name = "interval")
    protected Integer interval;
    /**
     * Sending behavior of the network message. True, if message is
     *                     triggered by signal changes.
     * 
     */
    @XmlAttribute(name = "triggered")
    protected Boolean triggered;
    /**
     * Number of repetitions of a triggered network message. 0 (default)
     *                     for infinite repetitions.
     * 
     */
    @XmlAttribute(name = "count")
    protected Integer count;
    /**
     * Frame format of the network message.
     * 
     */
    @XmlAttribute(name = "format")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String format;
    /**
     * True, if frame formats of the network message supports flexible
     *                     data rate (dual bit rate).
     * 
     */
    @XmlAttribute(name = "fd")
    protected Boolean fd;
    /**
     * True, if this CAN-FD message is sent with the BRS (bit-rate
     *                     switch) bit set, i.e. a higher bitrate should be used to send the payload of the
     *                     message. Setting this to bitrateswitch="true", if canfd="false" or canfd unset
     *                     (default), is an error.
     * 
     */
    @XmlAttribute(name = "bitrateswitch")
    protected Boolean bitrateswitch;
    /**
     * True, if message is a remote frame. Not possible in messages with
     *                     flexible data rate (fd).
     * 
     */
    @XmlAttribute(name = "remote")
    protected Boolean remote;

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotes(String value) {
        this.notes = value;
    }

    /**
     * Gets the value of the producer property.
     * 
     * @return
     *     possible object is
     *     {@link ProducerType }
     *     
     */
    public ProducerType getProducer() {
        return producer;
    }

    /**
     * Sets the value of the producer property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProducerType }
     *     
     */
    public void setProducer(ProducerType value) {
        this.producer = value;
    }

    /**
     * Gets the value of the multiplex property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the multiplex property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getMultiplex().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MultiplexType }
     * </p>
     * 
     * 
     * @return
     *     The value of the multiplex property.
     */
    public List<MultiplexType> getMultiplex() {
        if (multiplex == null) {
            multiplex = new ArrayList<>();
        }
        return this.multiplex;
    }

    /**
     * Gets the value of the signal property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the signal property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getSignal().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SignalType }
     * </p>
     * 
     * 
     * @return
     *     The value of the signal property.
     */
    public List<SignalType> getSignal() {
        if (signal == null) {
            signal = new ArrayList<>();
        }
        return this.signal;
    }

    /**
     * The unique identifier of the message. May have 11-bit (Standard
     *                     frame format) or 29-bit (Extended frame format). The identifier is usally
     *                     written in hexadecimal format e.g. 0x123. If format is "extended" this
     *                     identifier includes both Base ID (11 bits) and Extended ID (18
     *                     bits).
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Human-readable name of the network message
     *                     (e.g."OBD-Info").
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Number of bytes available in the data field of the message (data
     *                     length code). "auto" (default) calculate minimum length for the contained
     *                     signals in the message. Length greater than 8 is only allowed in messages with
     *                     flexible data rate (fd).
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLength() {
        if (length == null) {
            return "auto";
        } else {
            return length;
        }
    }

    /**
     * Sets the value of the length property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getLength()
     */
    public void setLength(String value) {
        this.length = value;
    }

    /**
     * Repetition interval of a cyclic network message in
     *                     milliseconds.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getInterval() {
        if (interval == null) {
            return  0;
        } else {
            return interval;
        }
    }

    /**
     * Sets the value of the interval property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     * @see #getInterval()
     */
    public void setInterval(Integer value) {
        this.interval = value;
    }

    /**
     * Sending behavior of the network message. True, if message is
     *                     triggered by signal changes.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isTriggered() {
        if (triggered == null) {
            return false;
        } else {
            return triggered;
        }
    }

    /**
     * Sets the value of the triggered property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isTriggered()
     */
    public void setTriggered(Boolean value) {
        this.triggered = value;
    }

    /**
     * Number of repetitions of a triggered network message. 0 (default)
     *                     for infinite repetitions.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCount() {
        if (count == null) {
            return  0;
        } else {
            return count;
        }
    }

    /**
     * Sets the value of the count property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     * @see #getCount()
     */
    public void setCount(Integer value) {
        this.count = value;
    }

    /**
     * Frame format of the network message.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFormat() {
        if (format == null) {
            return "standard";
        } else {
            return format;
        }
    }

    /**
     * Sets the value of the format property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getFormat()
     */
    public void setFormat(String value) {
        this.format = value;
    }

    /**
     * True, if frame formats of the network message supports flexible
     *                     data rate (dual bit rate).
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isFd() {
        if (fd == null) {
            return false;
        } else {
            return fd;
        }
    }

    /**
     * Sets the value of the fd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isFd()
     */
    public void setFd(Boolean value) {
        this.fd = value;
    }

    /**
     * True, if this CAN-FD message is sent with the BRS (bit-rate
     *                     switch) bit set, i.e. a higher bitrate should be used to send the payload of the
     *                     message. Setting this to bitrateswitch="true", if canfd="false" or canfd unset
     *                     (default), is an error.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isBitrateswitch() {
        if (bitrateswitch == null) {
            return false;
        } else {
            return bitrateswitch;
        }
    }

    /**
     * Sets the value of the bitrateswitch property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isBitrateswitch()
     */
    public void setBitrateswitch(Boolean value) {
        this.bitrateswitch = value;
    }

    /**
     * True, if message is a remote frame. Not possible in messages with
     *                     flexible data rate (fd).
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isRemote() {
        if (remote == null) {
            return false;
        } else {
            return remote;
        }
    }

    /**
     * Sets the value of the remote property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isRemote()
     */
    public void setRemote(Boolean value) {
        this.remote = value;
    }

}
