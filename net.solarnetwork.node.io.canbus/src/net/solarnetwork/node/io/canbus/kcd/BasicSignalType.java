//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.4 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package net.solarnetwork.node.io.canbus.kcd;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for BasicSignalType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="BasicSignalType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <attribute name="endianess" default="little">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *             <enumeration value="little"/>
 *             <enumeration value="big"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="length" default="1">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}positiveInteger">
 *             <minInclusive value="1"/>
 *             <maxInclusive value="512"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="offset" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger">
 *             <minInclusive value="0"/>
 *             <maxInclusive value="511"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BasicSignalType")
@XmlSeeAlso({
    MultiplexType.class,
    OriginalSignalType.class
})
public class BasicSignalType {

    /**
     * Determines if Byteorder is big-endian (Motorola), little-endian
     *                     (Intel) otherwise.
     * 
     */
    @XmlAttribute(name = "endianess")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String endianess;
    /**
     * Bit length of the signal.
     * 
     */
    @XmlAttribute(name = "length")
    protected Integer length;
    /**
     * Human readable name of the signal.
     * 
     */
    @XmlAttribute(name = "name", required = true)
    protected String name;
    /**
     * Least significant bit offset of the signal relative to the least
     *                     significant bit of the messages data payload.
     * 
     */
    @XmlAttribute(name = "offset", required = true)
    protected int offset;

    /**
     * Determines if Byteorder is big-endian (Motorola), little-endian
     *                     (Intel) otherwise.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEndianess() {
        if (endianess == null) {
            return "little";
        } else {
            return endianess;
        }
    }

    /**
     * Sets the value of the endianess property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getEndianess()
     */
    public void setEndianess(String value) {
        this.endianess = value;
    }

    /**
     * Bit length of the signal.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getLength() {
        if (length == null) {
            return  1;
        } else {
            return length;
        }
    }

    /**
     * Sets the value of the length property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     * @see #getLength()
     */
    public void setLength(Integer value) {
        this.length = value;
    }

    /**
     * Human readable name of the signal.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Least significant bit offset of the signal relative to the least
     *                     significant bit of the messages data payload.
     * 
     */
    public int getOffset() {
        return offset;
    }

    /**
     * Sets the value of the offset property.
     * 
     */
    public void setOffset(int value) {
        this.offset = value;
    }

}
