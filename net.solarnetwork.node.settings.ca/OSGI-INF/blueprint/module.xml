<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<!-- Configuration -->
	
	<ctx:property-placeholder properties-ref="settings.ca.cfg"/>

	<osgix:cm-properties id="settings.ca.cfg" persistent-id="net.solarnetwork.node.settings.ca">
		<beans:prop key="job.settingsBackup.cron">0 0/15 * * * ?</beans:prop>
		<beans:prop key="settingsBackup.destinationPath">var/settings-bak</beans:prop>
		<beans:prop key="settingsBackup.backupMaxCount">5</beans:prop>
	</osgix:cm-properties>
	
	<!-- Settings backup job -->

	<bean id="settingsBackup" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger">
			<bean class="net.solarnetwork.node.job.RandomizedCronTriggerFactoryBean">
				<property name="name" value="settingsBackupTrigger"/>
				<property name="cronExpression" value="${job.settingsBackup.cron}"/>
				<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
				<property name="randomSecond" value="true"/>
			</bean>
		</property>
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="name" value="settingsBackupJob"/>
				<property name="jobClass" value="net.solarnetwork.node.settings.ca.SettingsBackupJob"/>
				<property name="jobDataAsMap">
					<map>
						<entry key="settingDao" value-ref="settingDao"/>
						<entry key="settingsService" value-ref="settingsService"/>
					</map>
				</property>
			</bean>
		</property>
		<property name="messageSource">
			<bean class="org.springframework.context.support.ResourceBundleMessageSource">
				<property name="basenames" value="net.solarnetwork.node.settings.ca.JOBS"/>
			</bean>
		</property>
	</bean>
	
	<bean id="settingsService" class="net.solarnetwork.node.settings.ca.CASettingsService">
		<property name="configurationAdmin" ref="ca"/>
		<property name="settingDao" ref="settingDao"/>
		<property name="backupDestinationPath" value="${settingsBackup.destinationPath}"/>
		<property name="backupMaxCount" value="${settingsBackup.backupMaxCount}"/>
		<property name="transactionTemplate">
			<bean class="org.springframework.transaction.support.TransactionTemplate">
				<argument ref="txManager"/>
			</bean>
		</property>
		<property name="messageSource">
			<bean class="org.springframework.context.support.ResourceBundleMessageSource">
				<property name="basename" value="net.solarnetwork.node.settings.ca.CASettingsService"/>
			</bean>
		</property>
	</bean>
	
	<reference id="scheduler" interface="org.quartz.Scheduler" filter="(function=node)"/>

	<reference id="ca" interface="org.osgi.service.cm.ConfigurationAdmin"/>
	
	<reference id="txManager" interface="org.springframework.transaction.PlatformTransactionManager"
		filter="(db=node)"/>

	<reference id="settingDao" interface="net.solarnetwork.node.dao.SettingDao"/>
	
	<service ref="settingsBackup" interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>
	
	<service ref="settingsService">
		<interfaces>
			<value>net.solarnetwork.node.settings.SettingsService</value>
			<value>net.solarnetwork.node.backup.BackupResourceProvider</value>
		</interfaces>
	</service>
	
	<reference-list id="factoryList" interface="net.solarnetwork.node.settings.SettingSpecifierProviderFactory" availability="optional">
		<reference-listener ref="settingsService" bind-method="onBindFactory" unbind-method="onUnbindFactory"/>
	</reference-list>
	
	<reference-list id="providerList" interface="net.solarnetwork.node.settings.SettingSpecifierProvider" availability="optional">
		<reference-listener ref="settingsService" bind-method="onBind" unbind-method="onUnbind"/>
	</reference-list>
	
</blueprint>
