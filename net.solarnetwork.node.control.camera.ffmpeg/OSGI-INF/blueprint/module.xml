<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<bean id="scheduler" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="org.quartz.Scheduler"/>
		<property name="serviceFilter" value="(function=node)"/>
		<property name="sticky" value="true"/>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>net.solarnetwork.node.control.camera.ffmpeg.FfmpegCameraControl</value>
				<value>net.solarnetwork.service.support.BasicIdentifiable</value>
			</list>
		</property>
	</bean>
	
	<bean id="mediaResourceProvider" class="net.solarnetwork.node.setup.PatternMatchingSetupResourceProvider">
		<property name="basenames">
			<list>
				<value>META-INF/settings/camera-ffmpeg-media</value>
			</list>
		</property>
	</bean>
	
	<!-- Published Services -->

	<service interface="net.solarnetwork.node.setup.SetupResourceProvider">
		<bean class="net.solarnetwork.node.setup.SimpleSetupResourceProvider">
			<property name="resources">
				<list>
					<bean class="net.solarnetwork.node.setup.ClasspathSetupResource">
						<argument value="camera-ffmpeg.js"/>
						<argument value="camera-ffmpeg.js"/>
						<argument value="net.solarnetwork.node.control.camera.ffmpeg.FfmpegCameraControl"/>
						<argument value="#{T(net.solarnetwork.node.setup.SetupResource).JAVASCRIPT_CONTENT_TYPE}"/>
						<argument value="#{T(net.solarnetwork.node.setup.SetupResource).WEB_CONSUMER_TYPES}"/>
						<argument value="#{T(net.solarnetwork.node.setup.SetupResource).USER_ROLES}"/>
					</bean>
				</list>
			</property>
		</bean>
	</service>
	
	
	<service interface="net.solarnetwork.settings.SettingSpecifierProviderFactory">
		<bean class="net.solarnetwork.settings.support.BasicSettingSpecifierProviderFactory">
			<property name="displayName" value="FFmpeg Camera Control"/>
			<property name="factoryUid" value="net.solarnetwork.node.control.camera.ffmpeg"/>
			<property name="messageSource" ref="messageSource"/>
		</bean>
	</service>
	
	<osgix:managed-service-factory factory-pid="net.solarnetwork.node.control.camera.ffmpeg" 
			autowire-on-update="true" update-method="configurationChanged">
		<osgix:interfaces>
			<beans:value>net.solarnetwork.node.service.NodeControlProvider</beans:value>
			<beans:value>net.solarnetwork.node.reactor.InstructionHandler</beans:value>
			<beans:value>net.solarnetwork.settings.SettingSpecifierProvider</beans:value>
			<beans:value>net.solarnetwork.node.setup.SetupResourceProvider</beans:value>
		</osgix:interfaces>
		<osgix:service-properties>
			<beans:entry key="settingPid" value="net.solarnetwork.node.control.camera.ffmpeg"/>
			<beans:entry key="instruction">
				<beans:list>
					<beans:value>Signal</beans:value>
				</beans:list>
			</beans:entry>
		</osgix:service-properties>
		<bean class="net.solarnetwork.node.control.camera.ffmpeg.FfmpegCameraControl" 
				init-method="startup" destroy-method="shutdown">
			<argument ref="scheduler"/>
			<property name="messageSource" ref="messageSource"/>
			<property name="mediaResourceProvider" ref="mediaResourceProvider"/>
		</bean>
	</osgix:managed-service-factory>
	
</blueprint>
