info.key = Status
info.desc = Basic status information.

filterableAuthManager.propertyFilters['UID'].key = OCPP Authentication Service
filterableAuthManager.propertyFilters['UID'].desc = The service name of the OCPP Central System to use. Normally this \
	should match the <b>OCPP Service</b> value. 

meterDataSource.propertyFilters['groupUID'].key = OCPP Power Meters Group
meterDataSource.propertyFilters['groupUID'].desc = The service group of power meters to read samples from \
	when managing charge sessions. The meters must provide <code>ACEnergyDatum</code> datum.

socketMeterSourceMappingValue.key = Socket Meter Mapping
socketMeterSourceMappingValue.desc = A mapping of SolarNode <code>socket ID</code> values to \
	<code>source ID</code> values for the power meter to sample energy data from. \
	The syntax is like <b>/socket/1 = Main, ...</b>.

socketConnectorMappingValue.key = Socket Connector Mapping
socketConnectorMappingValue.desc = A mapping of SolarNode <code>socket ID</code> values to \
	OCPP connector ID values. OCPP connector IDs are integers and must be greater than 0. \
	The syntax is like <b>/socket/1 = 1, ...</b>.

status.active = {0} active sessions: {1}
status.needPosting = {0} local sessions need posting: {1}
status.none = No active sessions; no local sessions need to be posted.
