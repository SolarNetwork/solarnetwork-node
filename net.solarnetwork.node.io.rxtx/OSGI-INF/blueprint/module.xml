<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- DataCollectorFactory service -->

	<reference-list id="dataCollectorFactoryConfigurationList"
		interface="net.solarnetwork.node.util.BeanConfiguration" availability="optional"
		filter="(&amp;(beanConfigurationTarget=org.springframework.beans.factory.ObjectFactory)(factoryObjectClassName=net.solarnetwork.node.DataCollector)(io=serial))">
		<reference-listener bind-method="onBind" unbind-method="onUnbind" ref="dataCollectorFactory"/>
	</reference-list>
	
	<bean id="dataCollectorFactory" 
		class="net.solarnetwork.node.util.BeanConfigurationServiceRegistrationListener">
		<property name="serviceClass"
			value="net.solarnetwork.node.io.rxtx.SerialPortDataCollectorFactory"/>
		<property name="serviceInterfaces"
			value="org.springframework.beans.factory.ObjectFactory"/>
		<property name="serviceProperties">
			<map>
				<entry key="factoryObjectClassName" value="net.solarnetwork.node.DataCollector"/>
			</map>
		</property>
		<property name="bundleContext" ref="bundleContext"/>
	</bean>
	
	<!-- ConversationalDataCollectorFactory service -->
	
	<reference-list id="conversationalDataCollectorFactoryConfigurationList" 
		interface="net.solarnetwork.node.util.BeanConfiguration" availability="optional"
		filter="(&amp;(beanConfigurationTarget=org.springframework.beans.factory.ObjectFactory)(factoryObjectClassName=net.solarnetwork.node.ConversationalDataCollector)(io=serial))">
		<reference-listener bind-method="onBind" unbind-method="onUnbind" ref="conversationalDataCollectorFactory"/>
	</reference-list>
	
	<bean id="conversationalDataCollectorFactory" 
		class="net.solarnetwork.node.util.BeanConfigurationServiceRegistrationListener">
		<property name="serviceClass"
			value="net.solarnetwork.node.io.rxtx.SerialPortConversationalDataCollectorFactory"/>
		<property name="serviceInterfaces"
			value="org.springframework.beans.factory.ObjectFactory"/>
		<property name="serviceProperties">
			<map>
				<entry key="factoryObjectClassName" value="net.solarnetwork.node.ConversationalDataCollector"/>
			</map>
		</property>
		<property name="bundleContext" ref="bundleContext"/>
	</bean>
	
	<bean id="listenerSettingsFactory" 
		class="net.solarnetwork.node.settings.support.BasicSettingSpecifierProviderFactory">
		<property name="displayName" value="Serial Port"/>
		<property name="factoryUID" value="net.solarnetwork.node.io.rxtx"/>
		<property name="messageSource">
			<bean class="org.springframework.context.support.ResourceBundleMessageSource">
				<property name="basenames" value="net.solarnetwork.node.io.rxtx.RxtxDataCollectorFactory"/>
			</bean>
		</property>
	</bean>

	<!-- Published Services -->
	
	<service ref="listenerSettingsFactory" 
		interface="net.solarnetwork.node.settings.SettingSpecifierProviderFactory"/>
	
	<osgix:managed-service-factory factory-pid="net.solarnetwork.node.io.rxtx" autowire-on-update="true">
		<osgix:interfaces>
			<beans:value>net.solarnetwork.node.DataCollectorFactory</beans:value>
			<beans:value>net.solarnetwork.node.settings.SettingSpecifierProvider</beans:value>
		</osgix:interfaces>
		<osgix:service-properties>
			<beans:entry key="settingPid" value="net.solarnetwork.node.io.rxtx"/>
		</osgix:service-properties>
		<bean class="net.solarnetwork.node.io.rxtx.RxtxDataCollectorFactory"/>
	</osgix:managed-service-factory>
	
</blueprint>
