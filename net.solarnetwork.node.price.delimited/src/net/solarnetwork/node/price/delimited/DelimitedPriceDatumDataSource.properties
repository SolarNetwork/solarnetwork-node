title = Energy price URL lookup

uid.key = Service Name
uid.desc = A unique name to identify this service with.

groupUID.key = Service Group
groupUID.desc = An optional group to include this service in.

url.key = URL
delimiter.key = Delimiter
sourceIdColumn.key = Source ID column
priceColumn.key = Price column
dateTimeColumns.key = Date columns
dateFormat.key = Date format
skipLines.key = Skip lines

url.desc = The URL template for accessing the delimited price data from. This \
	allows a placeholder in the URL with the value of the current date,
	allowing the URL to contain a date request parameter if needed. For example, a value of \
	<code>http://some.place/prices?date=%1$tY-%1$tm-%1$td</code> would resolve \
	to something like <code>http://some.place/prices?date=2009-08-08</code>. See
	<a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html">Formatter</a>
	for information on the placeholder syntax.
delimiter.desc = A regular expression delimiter to split the lines of text with. 
sourceIdColumn.desc = An optional column index to use for the <code>sourceId</code>\
	value. If not configured, the URL used to request the data will be used.
priceColumn.desc = The result column index for the price. This is assumed to be \
	parsable as a double value.
dateTimeColumns.desc = A list of column indices to use as the \
	data's timestamp value. This is provided as a comma-delimited list of indices \
	in case the date and time of the price is split across multiple columns. \
	If multiple columns are configured, they will be joined with a space \
	character before parsing the result into a Date object.
dateFormat.desc = The date format to use for parsing the price date value. \
	The syntax is from \
	the <a href="http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html">java.text.SimpleDateFormat</a> \
	specification.
skipLines.desc = The number of lines of text to skip. This is useful for skipping \
	a "header" row with column names.
