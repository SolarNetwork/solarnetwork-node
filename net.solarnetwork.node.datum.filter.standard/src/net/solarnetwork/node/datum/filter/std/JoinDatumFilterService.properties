title = Join Datum Filter
desc = This component provides a way to merge the properties of multiple datum streams into a new datum stream.

outputSourceId.key = Output Source ID
outputSourceId.desc = The source ID to use for the joined (output) datum stream.

coalesceThreshold.key = Coalesce Threshold
coalesceThreshold.desc = When <code>2</code> or more then wait until datum from this \
	many <em>different</em> source IDs have been encountered before generating an output datum. Once a \
	coalesced datum has been generated the tracking of input sources resets and another datum will only \
	be generated after the threshold is met again. If <code>1</code> or less, then generate output datum \
	for <em>all</em> input datum.

swallowInput.key = Swallow Input
swallowInput.desc = If enabled, then filter out input datum after merging. Otherwise leave the input datum as-is.

propertySourceMappings.key = Source Property Mappings
propertySourceMappings.desc = A list of source IDs with associated property name templates to rename the \
	properties with. Each template must contain a <code>{p}</code> parameter which will be replaced by \
	the property names merged from datum encountered with the associated source ID. For example \
	<code>{p}_s1</code> would map an input property <code>watts</code> to <code>watts_s1</code>.

propertySourceMappingsItem.key.key = Source ID
propertySourceMappingsItem.key.desc = A source ID pattern to apply the associated <b>Mapping</b> to. \
	Capture groups are provided to the <b>Mapping</b> template.

propertySourceMappingsItem.value.key = Mapping
propertySourceMappingsItem.value.desc = A property name template with a <code>{p}</code> parameter \
	for an input property name to be mapped to a merged (output) property name. Pattern capture groups \
	from <b>Source ID</b> are available starting with <code>{\1}</code>. For example \
	<code>{p}_s1</code> would map an input property <code>watts</code> to <code>watts_s1</code>.
