title = Virtual Meter Filter
desc = This component provides a way to generate an accumulating property value, like a meter reading, \
	out of an instantaneous property over time.

status.key = Status
status.desc = Status information about the virtual meter sources.

sourceId.key = Source ID
sourceId.desc = A case-insensitive regular expression to match against datum <b>source ID</b> \
	values. If specified only datum with matching source ID values will be considered. For example \
	<code>^Solar</code> would match any source ID starting with <b>solar</b>.

virtualMeterConfigs.key = Virtual Meters
virtualMeterConfigs.desc = A list of  meter configurations for deriving <i>accumulating</i> meter reading \
	values from an <i>instantaneous</i> datum property.

virtualMeterConfigsItem.name.key = Property
virtualMeterConfigsItem.name.desc = The <i>instantaneous</i> datum property to generate virtual meter \
	values for.

virtualMeterConfigsItem.timeUnitName.key = Time Unit
virtualMeterConfigsItem.timeUnitName.desc = The meter time unit to use.

virtualMeterConfigsItem.maxAgeSeconds.key = Max Age
virtualMeterConfigsItem.maxAgeSeconds.desc = The maximum time between samples, in seconds, where \
	the meter reading can be advanced. This can prevent unexpected jumps in the reading value after \
	the node has not been collecting samples for some time.

virtualMeterConfigsItem.meterReading.key = Meter Reading
virtualMeterConfigsItem.meterReading.desc = The current meter reading. <b>Note:</b> only change this \
	if you are sure of the impact it will have on applications relying on this reading.

