<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Configuration -->

	<osgix:cm-properties id="price.cfg" persistent-id="net.solarnetwork.node.price">
		<beans:prop key="job.priceDatumLogger.cron">5 1/5 * * * ?</beans:prop>
		<beans:prop key="job.priceDatumCleaner.cron">45 21 0 ? * MON,WED,SAT</beans:prop>
	</osgix:cm-properties>
	
	<!-- Service References -->
	
	<reference id="priceDatumDao" interface="net.solarnetwork.node.dao.DatumDao"
		filter="(datumClassName=net.solarnetwork.node.price.PriceDatum)"
		availability="optional"/>

	<reference id="priceDatumDataSource" interface="net.solarnetwork.node.DatumDataSource"
		filter="(datumClassName=net.solarnetwork.node.price.PriceDatum)"
		availability="optional"/>

	<!-- Published Services -->
	
	<service ref="priceDatumLogger" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>

	<service ref="priceDatumCleaner" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>
	
	<!-- Supporting Services -->
	
	<ctx:property-placeholder properties-ref="price.cfg"/>

	<!-- Logger job -->

	<bean id="priceDatumLogger" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="priceDatumLoggerTrigger"/>
		<property name="jobDetail" ref="priceDatumLoggerJob"/>
	</bean>

	<bean id="priceDatumLoggerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="priceDatumLoggerJob"/>
		<property name="name" value="Price Logger"/>
		<property name="description" value="Capture pricing samples from registered PriceDatum data sources"/>
		<property name="cronExpression" value="${job.priceDatumLogger.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="priceDatumLoggerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDataSourceLoggerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDataSource" value-ref="priceDatumDataSource"/>
				<entry key="datumDao" value-ref="priceDatumDao"/>
			</map>
		</property>
	</bean>
	
	<!-- Cleaner job -->

	<bean id="priceDatumCleaner" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="priceDatumCleanerTrigger"/>
		<property name="jobDetail" ref="priceDatumCleanerJob"/>
	</bean>

	<bean id="priceDatumCleanerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="priceDatumCleanerJob"/>
		<property name="name" value="Price Cleaner"/>
		<property name="description" value="Clean out old cached price data from the local database"/>
		<property name="cronExpression" value="${job.priceDatumCleaner.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="priceDatumCleanerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDaoCleanerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDao" value-ref="priceDatumDao"/>
			</map>
		</property>
	</bean>
	
</blueprint>
