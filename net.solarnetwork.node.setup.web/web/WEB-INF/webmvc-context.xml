<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="messageSource" 
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:cacheSeconds="-1" p:basename="WEB-INF/messages"/>
	
	<ctx:annotation-config/>
	<ctx:component-scan base-package="net.solarnetwork.node.setup.web"/>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="prefixJson" value="false" />
				<property name="supportedMediaTypes" value="application/json" />
				<property name="objectMapper">
					<bean class="net.solarnetwork.util.ObjectMapperFactoryBean" >
						<property name="mapper" ref="jacksonObjectMapper"/>
						<property name="serializers">
							<list>
								<bean class="net.solarnetwork.util.JodaDateTimeSerializer"/>
								<bean class="net.solarnetwork.util.JodaLocalDateSerializer"/>
								<bean class="net.solarnetwork.util.JodaLocalDateTimeSerializer"/>
								<bean class="net.solarnetwork.util.JodaLocalTimeSerializer"/>
							</list>
						</property>
					</bean>
				</property>
		    </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- All this craziness just to set the serializationInclusion property without getting a
	 	"Invalid property 'serializationInclusion'" exception from Spring. -->
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<bean factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />
		</property>
		<property name="targetMethod" value="setSerializationInclusion" />
		<property name="arguments">
			<list>
				<value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- Dispatch requests mapped to POJO @Controllers implementations -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"
		p:alwaysUseFullPath="true"/>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"
		p:alwaysUseFullPath="true"/>

	<!-- Resolves logical view names returned by Controllers to Tiles; 
		a view name to resolve is treated as the name of a tiles definition -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</bean>

	<!-- If Tiles view not found, try a bean name (xml, json below) -->
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="2"/>
	</bean>
	
	<!-- Configures the Tiles layout system -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/jsp/layout/layout.xml</value>
				<value>/WEB-INF/**/views.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="json" class="net.solarnetwork.web.support.JSONView">
		<property name="contentType" value="application/json;charset=UTF-8"/>
		<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000"/>
	</bean>
	
</beans>
