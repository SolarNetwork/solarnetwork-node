<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<reference id="datumDao" availability="optional" filter="(!(upload=false))"
		interface="net.solarnetwork.node.dao.DatumDao"/>
	
	<service ref="mockUploadService" ranking="-1">
		<interfaces>
			<value>net.solarnetwork.node.service.UploadService</value>
			<value>net.solarnetwork.node.service.BulkUploadService</value>
		</interfaces>
	</service>

	<bean id="mockUploadService"
		class="net.solarnetwork.node.upload.mock.MockUploadService"/>

	<service>
		<interfaces>
			<value>net.solarnetwork.node.job.ManagedJob</value>
			<value>net.solarnetwork.settings.SettingSpecifierProvider</value>
		</interfaces>
		<service-properties>
			<entry key="service.pid" value="net.solarnetwork.node.upload.mock.job"/>
		</service-properties>
		<bean class="net.solarnetwork.node.job.SimpleManagedJob">
			<osgix:managed-properties persistent-id="net.solarnetwork.node.upload.mock.job" autowire-on-update="true"/>
			<argument>
				<bean class="net.solarnetwork.node.job.DatumDaoBulkUploadJob">
					<argument ref="datumDao"/>
					<argument ref="mockUploadService"/>
					<property name="uid" value="net.solarnetwork.node.upload.mock.job"/>
					<property name="messageSource">
						<bean class="org.springframework.context.support.ResourceBundleMessageSource">
							<property name="basenames" value="net.solarnetwork.node.upload.mock.MockUploadService"/>
						</bean>
					</property>
				</bean>
			</argument>
			<property name="schedule" value="20 * * * * ?"/>
		</bean>
	</service>
	
</blueprint>
