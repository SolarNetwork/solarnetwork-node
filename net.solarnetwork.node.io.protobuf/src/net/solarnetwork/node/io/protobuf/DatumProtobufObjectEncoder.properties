title = Protobuf Datum Encoder
desc = A service to encode datum into Protobuf messages. This service allows you to upload \
	<code>.proto</code> files and define a mapping from datum properties to Protobuf fields. \
	This service can then be used by other plugins that support configuring a Datum Encoder \
	service. You must also configure a suitable <b>Protobuf Compiler</b> component.

compilerServiceUidFilter.key = Protobuf Compiler
compilerServiceUidFilter.desc = The <b>Service Name</b> of the Protobuf Compiler component to use.

messageClassName.key = Message Class
messageClassName.desc = The full Java class name of the Protobuf message to convert datum to.

protoFiles.key = Upload Files
protoFiles.desc = Upload any number of <code>.proto</code> files.

protoFileNames.key = Proto File
protoFileNames.desc = The name of a previously uploaded <code>.proto</code> file.

propConfigs.key = Property Configurations
propConfigs.desc = A list of  datum property configurations that determine which datum properties \
	are mapped into Protobuf message fields.

propConfigsItem.datumProperty.key = Datum Property
propConfigsItem.datumProperty.desc = The datum property to copy.

propConfigsItem.fieldProperty.key = Field Property
propConfigsItem.fieldProperty.desc = The message field property on <b>Message Class</b> to set. \
	This uses a simple Java setter style syntax, with support for nested messages using a <code>.</code> \
	delimiter. For example <code>location.lat</code> would set the <code>lat</code> property on a nested \
	<code>location</code> message property.
