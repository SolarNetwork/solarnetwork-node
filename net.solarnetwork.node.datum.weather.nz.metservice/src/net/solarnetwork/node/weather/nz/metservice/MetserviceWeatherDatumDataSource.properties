title = New Zealand Metservice weather information

triggerCronExpression.key = Schedule
triggerCronExpression.desc = A \
	<a href="{0}">\
	cron expression</a> representing the schedule to sample data at.

nzMetserviceWeatherDatumLoggerJob.nzMetserviceWeatherDatumLoggerTrigger.key = Weather Logger 
nzMetserviceWeatherDatumLoggerJob.nzMetserviceWeatherDatumLoggerTrigger.desc = Sample data from the NZ Metservice and cache the data on the node.

uid.key = Service Name
uid.desc = A unique name to identify this service with.

groupUID.key = Service Group
groupUID.desc = An optional group to include this service in.

baseUrl.key = Base URL
baseUrl.desc = The base URL for queries to Metservice public data.

timestampDateFormat.desc = A date and time pattern for parsing the information date from \
	the <em>localObs</em> file. The syntax is from \
	the <a href="http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html">java.text.SimpleDateFormat</a> \
	specification.
timestampDateFormat.key = Timestamp format

localObs.key = Local observation file
localObs.desc = The name of the <em>localObs</em> file to parse. This file is expected \
	to contain a JSON object with temperature, humidity, pressure, and date attributes.

localObsContainerKey.key = Local observation data key
localObsContainerKey.desc = The name of the JSON property in the <em>localObs</em> file \
	that holds the JSON object with temperature, humidity, pressure, and date attributes.

localForecast.key = Local forecast name
localForecast.desc = The name of the <em>localForecast</em> file to parse. This file is expected \
	to contain a single JSON object declaration with an array of day JSON objects, \
	the first day from which the sky conditions are extracted. The real-time \
	data doesn't provide sky conditions, so we just use the presumably static \
	value for the day.
