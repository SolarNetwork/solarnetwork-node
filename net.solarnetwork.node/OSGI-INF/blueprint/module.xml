<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- Configuration -->

	<osgix:cm-properties id="core.cfg" persistent-id="net.solarnetwork.node.core">
		<beans:prop key="scheduler.startupDelay">60</beans:prop>
	</osgix:cm-properties>
	
	<!-- Service References -->

	<reference-list id="triggers" interface="net.solarnetwork.node.job.TriggerAndJobDetail" availability="optional">
		<reference-listener bind-method="onBind" unbind-method="onUnbind">
			<bean class="net.solarnetwork.node.runtime.JobServiceRegistrationListener">
				<property name="scheduler" ref="scheduler"/>
				<property name="bundleContext" ref="bundleContext"/>
			</bean>
		</reference-listener>
	</reference-list>

	<reference-list id="serializers" availability="optional" filter="(!(delegating=true))"
		interface="net.solarnetwork.node.reactor.ReactorSerializationService"/>
	
	<reference-list id="backupServices" availability="optional"
		interface="net.solarnetwork.node.backup.BackupService"/>
	
	<!-- Published Services -->

	<service ref="scheduler" interface="org.quartz.Scheduler"/>

	<service ref="delegatingReactorSerialization" ranking="5"
		interface="net.solarnetwork.node.reactor.ReactorSerializationService">
		<service-properties>
			<entry key="delegating" value="true"/>
		</service-properties>
	</service>
	
	<service ref="fsBackupService" interface="net.solarnetwork.node.backup.BackupService"/>
	
	<service ref="backupManager">
		<interfaces>
			<value>net.solarnetwork.node.backup.BackupManager</value>
			<value>net.solarnetwork.node.settings.SettingSpecifierProvider</value>
		</interfaces>
	</service>
	
	<!-- Supporting Services -->

	<ctx:property-placeholder properties-ref="core.cfg"/>

	<!-- Quartz scheduler for scheduling all jobs -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<property name="waitForJobsToCompleteOnShutdown" value="true"/>
		<property name="startupDelay" value="${scheduler.startupDelay}"/>
		<property name="schedulerName" value="Solar Node"/>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">3</prop>
			</props>
		</property>
		<property name="jobFactory">
			<bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/>
		</property>
	</bean>
	
	<bean id="delegatingReactorSerialization" 
		class="net.solarnetwork.node.reactor.support.DelegatingReactorSerialization">
		<property name="serializers" ref="serializers"/>
	</bean>
	
	<bean id="backupManager" class="net.solarnetwork.node.backup.DefaultBackupManager">
		<property name="backupServices" ref="backupServices"/>
		<property name="backupServiceTracker">
			<bean class="net.solarnetwork.util.DynamicServiceTracker">
				<property name="bundleContext" ref="bundleContext"/>
				<property name="serviceClassName" value="net.solarnetwork.node.backup.BackupService"/>
			</bean>	
		</property>
	</bean>

	<bean id="fsBackupService" class="net.solarnetwork.node.backup.FileSystemBackupService">
		<osgix:managed-properties 
			persistent-id="net.solarnetwork.node.backup.FileSystemBackupService" 
			autowire-on-update="true"/>
		<property name="backupDir" value="#{T(java.lang.System).getProperty('java.io.tmpdir')}"/>
		<property name="additionalBackupCount" value="0"/>
	</bean>

</blueprint>
