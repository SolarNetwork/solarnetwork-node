title = Storage Service File Watcher
desc = Watches a file system directory for changes, saving any files that appear \
	or change to a Storage Service. This can be used to save files to an external \
	service like AWS S3.

status.key = Status
status.desc = Overview of the watcher.

storageService.propertyFilters['uid'].key = Storage Service
storageService.propertyFilters['uid'].desc = The <b>Service Name</b> of the Storage Service \
	component to save updated files to.

path.key = Path
path.desc = The local file system path to watch for changes.

filterValue.key = Filter
filterValue.desc = A regular expression to filter file names by. Only files matching the given \
	expression will be saved to the storage service. For example <code>.+\..+</code>.

recursive.key = Sub-folders
recusrive.desc = If enabled, watch for changes in any sub-folders within <b>Path</b> in addition \
	to <b>Path</b> itself. Otherwise sub-folders will be ignored.

saveDelay.key = Save Delay
saveDelay.desc = Number of milliseconds after a file change is detected to wait before saving \
	the file to the Storage Service. This can be useful if a file is modified in quick succession \
	so that it is only saved once.

resourceStorageDatumSourceId.key = Datum Source ID
resourceStorageDatumSourceId.desc = If configured then datum will be generated each time a file \
	is saved to the configured Storage Service, with this source ID and a <code>url</code> property that \
	links to the stored resource.

status.exception = An error occurred: {0}
status.notWatching = Not configured.
status.running = Watching. Files created: {0}; modified: {1}; saved: {2}; failed: {3}; ignored: {4}.
