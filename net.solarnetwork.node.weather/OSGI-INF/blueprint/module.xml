<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint
		http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Configuration -->

	<osgix:cm-properties id="weather.cfg" persistent-id="net.solarnetwork.node.weather">
		<beans:prop key="job.dayDatumLogger.cron">0 15 2,8,14,18 * * ?</beans:prop>
		<beans:prop key="job.dayDatumCleaner.cron">45 23 0 ? * TUE,THU,SUN</beans:prop>

		<beans:prop key="job.weatherDatumLogger.cron">0 10/20 * * * ?</beans:prop>
		<beans:prop key="job.weatherDatumCleaner.cron">55 23 0 ? * TUE,THU,SUN</beans:prop>
	</osgix:cm-properties>
	
	<reference id="uploadService" interface="net.solarnetwork.node.UploadService"
		availability="optional"/>
	
	<!-- Day -->

	<reference id="dayDatumDao" interface="net.solarnetwork.node.dao.DatumDao"
		filter="(datumClassName=net.solarnetwork.node.weather.DayDatum)"
		availability="optional"/>

	<osgi:list id="dayDatumDataSources" greedy-proxying="true" availability="optional" 
		interface="net.solarnetwork.node.DatumDataSource"
		filter="(datumClassName=net.solarnetwork.node.weather.DayDatum)"/>

	<service ref="dayDatumLogger" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>

	<service ref="dayDatumCleaner" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>

	<!-- Weather -->
	
	<reference id="weatherDatumDao" interface="net.solarnetwork.node.dao.DatumDao"
		filter="(datumClassName=net.solarnetwork.node.weather.WeatherDatum)"
		availability="optional"/>

	<osgi:list id="weatherDatumDataSources" greedy-proxying="true" availability="optional" 
		interface="net.solarnetwork.node.DatumDataSource"
		filter="(datumClassName=net.solarnetwork.node.weather.WeatherDatum)"/>

	<service ref="weatherDatumLogger" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>

	<service ref="weatherDatumCleaner" 
		interface="net.solarnetwork.node.job.TriggerAndJobDetail"/>

	<!-- Supporting Services -->

	<ctx:property-placeholder properties-ref="weather.cfg"/>

	<bean id="jobMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="net.solarnetwork.node.weather.JOBS"/>
	</bean>

	<!-- Day Logger job -->

	<bean id="dayDatumLogger" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="dayDatumLoggerTrigger"/>
		<property name="jobDetail" ref="dayDatumLoggerJob"/>
		<property name="messageSource" ref="jobMessageSource"/>
	</bean>

	<bean id="dayDatumLoggerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="dayDatumLoggerJob"/>
		<property name="cronExpression" value="${job.dayDatumLogger.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="dayDatumLoggerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDataSourceLoggerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDataSources" value-ref="dayDatumDataSources"/>
				<entry key="datumDao" value-ref="dayDatumDao"/>
			</map>
		</property>
	</bean>
	
	<!-- Day Cleaner job -->

	<bean id="dayDatumCleaner" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="dayDatumCleanerTrigger"/>
		<property name="jobDetail" ref="dayDatumCleanerJob"/>
		<property name="messageSource" ref="jobMessageSource"/>
	</bean>

	<bean id="dayDatumCleanerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="dayDatumCleanerJob"/>
		<property name="cronExpression" value="${job.dayDatumCleaner.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="dayDatumCleanerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDaoCleanerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDao" value-ref="dayDatumDao"/>
			</map>
		</property>
	</bean>


	<!-- Weather Logger job -->

	<bean id="weatherDatumLogger" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="weatherDatumLoggerTrigger"/>
		<property name="jobDetail" ref="weatherDatumLoggerJob"/>
		<property name="messageSource" ref="jobMessageSource"/>
	</bean>

	<bean id="weatherDatumLoggerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="weatherDatumLoggerJob"/>
		<property name="cronExpression" value="${job.weatherDatumLogger.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="weatherDatumLoggerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDataSourceLoggerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDataSources" value-ref="weatherDatumDataSources"/>
				<entry key="datumDao" value-ref="weatherDatumDao"/>
			</map>
		</property>
	</bean>
	
	<!-- Weather Cleaner job -->

	<bean id="weatherDatumCleaner" class="net.solarnetwork.node.job.SimpleTriggerAndJobDetail">
		<property name="trigger" ref="weatherDatumCleanerTrigger"/>
		<property name="jobDetail" ref="weatherDatumCleanerJob"/>
		<property name="messageSource" ref="jobMessageSource"/>
	</bean>

	<bean id="weatherDatumCleanerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="weatherDatumCleanerJob"/>
		<property name="cronExpression" value="${job.weatherDatumCleaner.cron}"/>
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>

	<bean id="weatherDatumCleanerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="net.solarnetwork.node.job.DatumDaoCleanerJob"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="datumDao" value-ref="weatherDatumDao"/>
			</map>
		</property>
	</bean>

</blueprint>
