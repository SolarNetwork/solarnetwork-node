<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
	
	<reference id="executor" interface="java.util.concurrent.Executor" filter="(function=node)"/>
	
	<reference id="opModesService" interface="net.solarnetwork.node.service.OperationalModesService"/>

	<reference id="identityService" availability="optional" interface="net.solarnetwork.node.service.IdentityService"/>

	<reference id="mqttConnectionFactory" interface="net.solarnetwork.common.mqtt.MqttConnectionFactory"/>
	
	<reference id="datumQueue" interface="net.solarnetwork.node.service.DatumQueue"/>

	<bean id="sslService" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.service.SSLService"/>
		<property name="sticky" value="true"/>
	</bean>

	<bean id="objectMapper" class="net.solarnetwork.codec.JsonUtils" factory-method="newDatumObjectMapper">
		<argument>
			<bean class="net.solarnetwork.codec.CborUtils" factory-method="cborFactory"/>
		</argument>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="net.solarnetwork.node.upload.flux.FluxUploadService"/>
	</bean>

	<bean id="datumEncoders" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.codec.ObjectEncoder"/>
		<property name="serviceFilter" value="(&amp;(function=node)(function=datum)(objectType=java.util.Map))"/>
	</bean>

	<bean id="transformServices" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.service.DatumFilterService"/>
		<property name="serviceFilter" value="(!(role=global))"/>
	</bean>
	
	<bean id="mqttMessageDao" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.common.mqtt.dao.MqttMessageDao"/>
		<property name="sticky" value="true"/>
	</bean>

	<!-- Published Services -->
	
	<service interface="net.solarnetwork.settings.SettingSpecifierProviderFactory">
		<bean class="net.solarnetwork.settings.support.BasicSettingSpecifierProviderFactory">
			<property name="displayName" value="SolarFlux Uploader"/>
			<property name="factoryUid" value="net.solarnetwork.node.upload.flux"/>
			<property name="messageSource" ref="messageSource"/>
		</bean>
	</service>
	
	<osgix:managed-service-factory factory-pid="net.solarnetwork.node.upload.flux" 
			autowire-on-update="true" update-method="configurationChanged">
		<osgix:interfaces>
			<beans:value>net.solarnetwork.settings.SettingSpecifierProvider</beans:value>
			<beans:value>org.osgi.service.event.EventHandler</beans:value>
			<beans:value>net.solarnetwork.service.PingTest</beans:value>
		</osgix:interfaces>
		<osgix:service-properties>
			<beans:entry key="settingPid" value="net.solarnetwork.node.upload.flux"/>
			<beans:entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<beans:array value-type="java.lang.String">
					<beans:value>#{T(net.solarnetwork.node.service.OperationalModesService).EVENT_TOPIC_OPERATIONAL_MODES_CHANGED}</beans:value>
					<beans:value>net/solarnetwork/Log</beans:value>
				</beans:array>
			</beans:entry>
		</osgix:service-properties>
		<bean class="net.solarnetwork.node.upload.flux.FluxUploadService" init-method="init" destroy-method="shutdown">
			<argument ref="mqttConnectionFactory"/>
			<argument ref="objectMapper"/>
			<argument ref="identityService"/>
			<argument ref="datumQueue"/>
			<property name="messageSource" ref="messageSource"/>
			<property name="executor" ref="executor"/>
			<property name="opModesService" ref="opModesService"/>
			<property name="mqttConfig.optionalSslService" ref="sslService"/>
			<property name="datumEncoders" ref="datumEncoders"/>
			<property name="transformServices" ref="transformServices"/>
			<property name="mqttMessageDao" ref="mqttMessageDao"/>
		</bean>
	</osgix:managed-service-factory>
	
</blueprint>
