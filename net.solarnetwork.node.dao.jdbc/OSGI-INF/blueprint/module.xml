<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Configuration -->
	
	<osgix:cm-properties id="dao.jdbc.cfg" persistent-id="net.solarnetwork.node.dao.jdbc">
		<beans:prop key="DatabaseSetup.initSqlResource">classpath:/net/solarnetwork/node/dao/jdbc/derby-init.sql</beans:prop>
		<beans:prop key="jdbc.driver">org.apache.derby.jdbc.EmbeddedDriver</beans:prop>
		<beans:prop key="jdbc.url">jdbc:derby:solarnode;create=true</beans:prop>
		<beans:prop key="jdbc.user">solarnode</beans:prop>
		<beans:prop key="jdbc.pass">solarnode</beans:prop>
		<beans:prop key="jdbc.pool.maxIdle">0</beans:prop>
		<beans:prop key="jdbc.pool.maxActive">3</beans:prop>
		<beans:prop key="jdbc.pool.maxWait">20000</beans:prop>
		<beans:prop key="jdbc.pool.timeBetweenEvictionRunsMillis">120000</beans:prop>
		<beans:prop key="jdbc.pool.minEvictableIdleTimeMillis">300000</beans:prop>
		<beans:prop key="jdbc.pool.validationQuery">VALUES CURRENT_DATE</beans:prop>
	</osgix:cm-properties>
	
	<!-- Service References -->
	
	<reference id="dataSourceFactory"
		interface="org.osgi.service.jdbc.DataSourceFactory"
        filter="(osgi.jdbc.driver.class=${jdbc.driver})"/>
	
	<!-- Published Services -->
	
	<service ref="settingDao" interface="net.solarnetwork.node.dao.SettingDao" depends-on="databaseSetup"/>
	
	<service ref="dataSource" interface="javax.sql.DataSource" depends-on="databaseSetup">
		<service-properties>
			<entry key="db" value="node"/>
		</service-properties>
	</service>

	<service ref="jdbcTemplate" interface="org.springframework.jdbc.core.JdbcOperations">
		<service-properties>
			<entry key="db" value="node"/>
		</service-properties>
	</service>

	<service ref="txManager" interface="org.springframework.transaction.PlatformTransactionManager"
		depends-on="databaseSetup">
		<service-properties>
			<entry key="db" value="node"/>
		</service-properties>
	</service>

	<!--  Supporting Services -->

	<ctx:property-placeholder properties-ref="dao.jdbc.cfg"/>
	
	<bean id="dataSource" class="net.solarnetwork.dao.jdbc.TomcatJdbcPoolDataSourceFactoryBean">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="jmxEnabled" value="true"/>
				<property name="testWhileIdle" value="false"/>
				<property name="testOnBorrow" value="true"/>
				<property name="validationQuery" value="${jdbc.pool.validationQuery}"/>
				<property name="testOnReturn" value="false"/>
				<property name="validationInterval" value="30000"/>
				<property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
				<property name="maxActive" value="${jdbc.pool.maxActive}"/>
				<property name="initialSize" value="0"/>
				<property name="maxWait" value="${jdbc.pool.maxWait}"/>
				<property name="removeAbandonedTimeout" value="60"/>
				<property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
				<property name="minIdle" value="0"/>
				<property name="maxIdle" value="${jdbc.pool.maxActive}"/>
				<property name="logAbandoned" value="true"/>
				<property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>
			</bean>
		</property>
		<property name="dataSourceFactory" ref="dataSourceFactory"/>
		<property name="dataSourceProperties">
			<props>
				<prop key="url">${jdbc.url}</prop>
				<prop key="user">${jdbc.user}</prop>
				<prop key="password">${jdbc.pass}</prop>
			</props>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- PlatformTransactionManager: local JDBC transaction manager. -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="databaseSetup" class="net.solarnetwork.node.dao.jdbc.DatabaseSetup"
			init-method="init">
		<property name="dataSource" ref="dataSource"/>
		<property name="initSqlResource" value="${DatabaseSetup.initSqlResource}"/>
	</bean>
	
	<bean id="settingDao" class="net.solarnetwork.node.dao.jdbc.JdbcSettingDao">
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionTemplate">
			<bean class="org.springframework.transaction.support.TransactionTemplate">
				<argument ref="txManager"/>
			</bean>
		</property>
	</bean>

</blueprint>
