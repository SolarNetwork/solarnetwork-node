<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<reference id="taskScheduler" interface="org.springframework.scheduling.TaskScheduler" filter="(function=node)"/>

	<bean id="datumQueue" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.node.service.DatumQueue"/>
		<property name="sticky" value="true"/>
	</bean>

	<bean id="placeholderService" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.node.service.PlaceholderService"/>
		<property name="sticky" value="true"/>
	</bean>

	<bean id="datumMetadataService" class="net.solarnetwork.common.osgi.service.DynamicServiceTracker">
		<argument ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.node.service.DatumMetadataService"/>
		<property name="sticky" value="true"/>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<array>
				<value>net.solarnetwork.node.datum.weather.weatherflow.tempest.TempestUdpDatumDataSource</value>
				<value>net.solarnetwork.node.service.support.DatumDataSourceSupport</value>
				<value>net.solarnetwork.service.support.BasicIdentifiable</value>
			</array>
		</property>
	</bean>

	<service interface="net.solarnetwork.settings.SettingSpecifierProviderFactory">
		<bean class="net.solarnetwork.settings.support.BasicSettingSpecifierProviderFactory">
			<property name="displayName" value="Tempest atmospheric data"/>
			<property name="factoryUid" value="net.solarnetwork.node.datum.weatherflow.tempest"/>
			<property name="messageSource" ref="messageSource"/>
		</bean>
	</service>

	<osgix:managed-service-factory factory-pid="net.solarnetwork.node.datum.weatherflow.tempest" 
			autowire-on-update="true" update-method="configurationChanged" >
		<osgix:interfaces>
			<beans:value>net.solarnetwork.settings.SettingSpecifierProvider</beans:value>
			<beans:value>net.solarnetwork.node.service.MultiDatumDataSource</beans:value>
		</osgix:interfaces>
		<osgix:service-properties>
			<beans:entry key="datumClassName" value="net.solarnetwork.domain.datum.AtmosphericDatum"/>
		</osgix:service-properties>
		<bean class="net.solarnetwork.node.datum.weather.weatherflow.tempest.TempestUdpDatumDataSource"
				init-method="serviceDidStartup" destroy-method="serviceDidShutdown">
			<property name="messageSource" ref="messageSource"/>
			<property name="placeholderService" ref="placeholderService"/>
			<property name="datumMetadataService" ref="datumMetadataService"/>
			<property name="datumQueue" ref="datumQueue"/>
			<property name="taskScheduler" ref="taskScheduler"/>
		</bean>
	</osgix:managed-service-factory>

</blueprint>
